{"version":3,"sources":["../source/ucumJsonDefs.js"],"names":["Pfx","require","PfxT","Un","Utab","jsonDefs_","UcumJsonDefs","loadJsonDefs","UnitTables","getInstance","unitsCount","pTab","PrefixTables","prefixes","plen","length","p","newPref","Prefix","add","uTab","units","ulen","u","newUnit","Unit","addUnit","ucumJsonDefs"],"mappings":";;;;;;;AAAA;;;;;;;AAQA,IAAIA,GAAG,GAAGC,OAAO,CAAC,aAAD,CAAjB;;AACA,IAAIC,IAAI,GAAGD,OAAO,CAAC,mBAAD,CAAlB;;AACA,IAAIE,EAAE,GAAGF,OAAO,CAAC,WAAD,CAAhB;;AACA,IAAIG,IAAI,GAAGH,OAAO,CAAC,iBAAD,CAAlB,C,CAEA;;;AACA,IAAII,SAAS,GAAGJ,OAAO,CAAC,uBAAD,CAAvB;;AAEO,MAAMK,YAAN,CAAmB;AAExB;;;;;;AAMAC,EAAAA,YAAY,GAAG;AAEb,QAAIH,IAAI,CAACI,UAAL,CAAgBC,WAAhB,GAA8BC,UAA9B,OAA+C,CAAnD,EAAsD;AAEpD,UAAIC,IAAI,GAAGT,IAAI,CAACU,YAAL,CAAkBH,WAAlB,EAAX;AACA,UAAII,QAAQ,GAAGR,SAAS,CAAC,UAAD,CAAxB;AACA,UAAIS,IAAI,GAAGD,QAAQ,CAACE,MAApB;;AAEA,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,IAApB,EAA0BE,CAAC,EAA3B,EAA+B;AAC7B,YAAIC,OAAO,GAAG,IAAIjB,GAAG,CAACkB,MAAR,CAAeL,QAAQ,CAACG,CAAD,CAAvB,CAAd;AACAL,QAAAA,IAAI,CAACQ,GAAL,CAASF,OAAT;AACD;;AAED,UAAIG,IAAI,GAAGhB,IAAI,CAACI,UAAL,CAAgBC,WAAhB,EAAX;AACA,UAAIY,KAAK,GAAGhB,SAAS,CAAC,OAAD,CAArB;AACA,UAAIiB,IAAI,GAAGD,KAAK,CAACN,MAAjB;;AAEA,WAAK,IAAIQ,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,IAApB,EAA0BC,CAAC,EAA3B,EAA+B;AAC7B,YAAIC,OAAO,GAAG,IAAIrB,EAAE,CAACsB,IAAP,CAAYJ,KAAK,CAACE,CAAD,CAAjB,CAAd;AACAH,QAAAA,IAAI,CAACM,OAAL,CAAaF,OAAb;AACD;AACF,KArBY,CAqBX;;AACH,GA9BuB,CA8BtB;;;AA9BsB,C,CAgCxB;;;;AAEF,IAAIG,YAAY,GAAG,IAAIrB,YAAJ,EAAnB","sourcesContent":["/**\n * This class handles opening, reading and loading the JSON file of ucum\n * definitions (prefixes, base units, and unit atoms).\n *\n * @author Lee Mericle\n *\n */\n\nvar Pfx = require(\"./prefix.js\");\nvar PfxT = require(\"./prefixTables.js\");\nvar Un = require(\"./unit.js\");\nvar Utab = require('./unitTables.js');\n\n// requiring the file will take care of opening it for use\nvar jsonDefs_ = require('../data/ucumDefs.json');\n\nexport class UcumJsonDefs {\n\n  /**\n   * This method loads the JSON prefix and unit objects into the prefix and\n   * unit tables.\n   *\n   * @returns nothing\n   */\n  loadJsonDefs() {\n\n    if (Utab.UnitTables.getInstance().unitsCount() === 0) {\n\n      let pTab = PfxT.PrefixTables.getInstance();\n      let prefixes = jsonDefs_[\"prefixes\"];\n      let plen = prefixes.length;\n\n      for (let p = 0; p < plen; p++) {\n        let newPref = new Pfx.Prefix(prefixes[p]);\n        pTab.add(newPref);\n      }\n\n      let uTab = Utab.UnitTables.getInstance();\n      let units = jsonDefs_[\"units\"];\n      let ulen = units.length;\n\n      for (let u = 0; u < ulen; u++) {\n        let newUnit = new Un.Unit(units[u]);\n        uTab.addUnit(newUnit);\n      }\n    } // end if the data has not already been loaded\n  } // end loadJsonDefs\n\n} // end UcumJsonDefs class\n\nvar ucumJsonDefs = new UcumJsonDefs();\nexport {ucumJsonDefs};\n"],"file":"ucumJsonDefs.js"}