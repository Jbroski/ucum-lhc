{"version":3,"sources":["../source/ucumInternalUtils.js"],"names":["isNumericString","getSynonyms","UnitTables","require","theString","num","isNaN","parseFloat","theSyn","retObj","utab","getInstance","resp","getUnitBySynonym","aLen","length","a","theUnit","csCode_","name_","guidance_"],"mappings":";;;;;QA+BgBA,e,GAAAA,e;QAqBAC,W,GAAAA,W;AApDhB;;;;;;;;;;;;AAYA;;;;;;;AAOA,IAAIC,aAAaC,QAAQ,iBAAR,EAA2BD,UAA5C;;AAGA;;;;;;;;;AASO,SAASF,eAAT,CAAyBI,SAAzB,EAAoC;AACzC,MAAIC,MAAM,KAAKD,SAAf,CADyC,CACf;AAC1B,SAAO,CAACE,MAAMD,GAAN,CAAD,IAAe,CAACC,MAAMC,WAAWF,GAAX,CAAN,CAAvB;AACD,C,CAAC;;;AAGF;;;;;;;;;;;;;;;AAeO,SAASJ,WAAT,CAAqBO,MAArB,EAA6B;;AAElC,MAAIC,SAAS,EAAb;AACA,MAAIC,OAAOR,WAAWS,WAAX,EAAX;AACA,MAAIC,OAAO,EAAX;AACAA,SAAOF,KAAKG,gBAAL,CAAsBL,MAAtB,CAAP;;AAEA;AACA,MAAI,CAACI,KAAK,OAAL,CAAL,EAAoB;AAClBH,WAAO,QAAP,IAAmBG,KAAK,QAAL,CAAnB;AACAH,WAAO,KAAP,IAAgBG,KAAK,KAAL,CAAhB;AACD,GAHD,MAIK;AACHH,WAAO,QAAP,IAAmB,WAAnB;AACA,QAAIK,OAAOF,KAAK,OAAL,EAAcG,MAAzB;AACAN,WAAO,OAAP,IAAkB,EAAlB;AACA,SAAK,IAAIO,IAAI,CAAb,EAAgBA,IAAIF,IAApB,EAA0BE,GAA1B,EAA+B;AAC7B,UAAIC,UAAUL,KAAK,OAAL,EAAcI,CAAd,CAAd;AACAP,aAAO,OAAP,EAAgBO,CAAhB,IAAqB;AACnB,gBAAQC,QAAQC,OADG;AAEnB,gBAAQD,QAAQE,KAFG;AAGnB,oBAAYF,QAAQG,SAHD,EAArB;AAID,KAVE,CAUD;AACH,GAvBiC,CAuBhC;AACF,SAAOX,MAAP;AAED,C,CAAC","file":"ucumInternalUtils.js","sourcesContent":["/**\n * Internal utilities used by multiple UCUM classes.  For example,\n * isNumericString is used by both the UnitString and UcumLhcUtils\n * classes.  If it's in the UnitString class the UcumLhcUtils class\n * needs to require the UnitString class.  But the checkSynonyms\n * class is used by the UnitString class - but was in the UcumLhcUtils\n * class.  Requiring the UcumLhcUtils class from the UnitString class\n * made everything break (cyclical requires).\n *\n * So now they're here.\n */\n\n/**\n * This module implements internal ucum utilities.\n *\n * @author Lee Mericle, based on java version by Gunther Schadow\n *\n */\n\nvar UnitTables = require('./unitTables.js').UnitTables ;\n\n\n/**\n * This function tests a string to see if it contains only numbers (digits,\n * a period, leading - or +).  This code was taken from a stackoverflow\n * solution:\n * https://stackoverflow.com/questions/175739/is-there-a-built-in-way-in-javascript-to-check-if-a-string-is-a-valid-number/42356340#42356340\n *\n * @params theString\n * @returns true if the string contains only numbers; false otherwise\n */\nexport function isNumericString(theString) {\n  let num = \"\" + theString; //coerce num to be a string\n  return !isNaN(num) && !isNaN(parseFloat(num));\n} // end isNumericString\n\n\n/**\n * This method accepts a term and looks for units that include it as\n * a synonym - or that include the term in its name.\n *\n * @param theSyn the term to search for.  This is assumed to be\n *  a string and not undefined.  The calling method should do any\n *  necessary checking before calling this.\n * @returns a hash with up to three elements:\n *  'status' contains the status of the request, which can be 'error',\n *    'failed' or succeeded';\n *  'msg' which contains a message for an error or if no units were found; and\n *  'units' which is an array that contains one array for each unit found:\n *    the unit's csCode_, the unit's name_, and the unit's guidance_\n *\n */\nexport function getSynonyms(theSyn) {\n\n  let retObj = {} ;\n  let utab = UnitTables.getInstance();\n  let resp = {} ;\n  resp = utab.getUnitBySynonym(theSyn);\n\n  // If we didn't get any units, transfer the status and message\n  if (!resp['units']) {\n    retObj['status'] = resp['status'];\n    retObj['msg'] = resp['msg'];\n  }\n  else {\n    retObj['status'] = 'succeeded';\n    let aLen = resp['units'].length ;\n    retObj['units'] = [];\n    for (let a = 0; a < aLen; a++) {\n      let theUnit = resp['units'][a];\n      retObj['units'][a] = {\n        'code': theUnit.csCode_,\n        'name': theUnit.name_,\n        'guidance': theUnit.guidance_};\n    } // end do for all units returned\n  } // end if we got a units list\n  return retObj ;\n\n} // end getSynonyms\n\n"]}