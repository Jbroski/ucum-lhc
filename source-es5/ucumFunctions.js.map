{"version":3,"sources":["../source/ucumFunctions.js"],"names":["UcumFunctions","funcs","cnvTo","x","cnvFrom","Math","log","LN10","pow","exp","LN2","tan","atan","sqrt","func","holdThis","prototype","exports","Error","self","getInstance","fname","toLowerCase","f"],"mappings":"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","file":"ucumFunctions.js","sourcesContent":["/*\n * This class manages the special functions used by some units.\n *\n * @author Lee Mericle, based on java version by Gunther Schadow\n *\n */\n\nclass UcumFunctions {\n\n  /**\n   * Constructor\n   *\n   * Creates the singleton object that contains the list of functions used\n   * to convert special units.\n   */\n  constructor() {\n\n    // Create the hash containing the function pairs\n    this.funcs = {};\n\n    // Celsius - convert to Celsius from kelvin and from Celsius to kelvin\n    // where kelvin is the base unit for temperature\n    this.funcs['cel'] = {cnvTo   : function(x){return x - 273.15;},\n                      cnvFrom : function(x){return x + 273.15;}};\n\n    // Fahrenheit - convert to Fahrenheit from kelvin and from Fahrenheit to\n    // kelvin - which is the base unit for temperature\n    this.funcs['degf'] = {cnvTo   : function(x){return x - 459.67;},\n                       cnvFrom : function(x){return x + 459.67;}};\n\n    // Reaumur - convert between Reaumur and Kelvin.   Because of the way the\n    // calling code in the Units class is set up (in the convertFrom method),\n    // what is given here as the convertTo function is actually the convert\n    // from method and vice versa.\n    //this.funcs['degre'] = {cnvTo   : function(x){return x + 273.15;},\n    //                    cnvFrom : function(x){return x - 273.15;}};\n    this.funcs['degre'] = {cnvTo   : function(x){return x - 273.15;},\n                        cnvFrom : function(x){return x + 273.15;}};\n\n    // pH - convert to pH from moles per liter and from moles per liter to pH\n    // where a mole is an amount of a substance (a count of particles)\n    this.funcs['ph'] = {cnvTo  : function(x){return - Math.log(x) / Math.LN10;},\n                     cnvFrom : function(x){return Math.pow(10, -x);}};\n\n    // ln - natural logarithm (base e 2.71828) - apply (cnvTo) and invert (cnvFrom)\n    // and 2ln - two times the natural logarithm\n    this.funcs['ln'] = {cnvTo : function(x){return Math.log(x);},\n                     cnvFrom : function(x){return Math.exp(x);}};\n    this.funcs['2ln'] = {cnvTo : function(x){return 2 * Math.log(x);},\n                      cnvFrom : function(x){return Math.exp(x / 2);}};\n\n    // lg - the decadic logarithm (base 10)\n    this.funcs['lg'] = {cnvTo : function(x){return Math.log(x) / Math.LN10;},\n                     cnvFrom : function(x){return Math.pow(10, x);}};\n    this.funcs['10lg'] = {cnvTo : function(x){return 10 * Math.log(x)/Math.LN10;},\n                       cnvFrom : function(x){return Math.pow(10, x / 10);}};\n    this.funcs['20lg'] = {cnvTo : function(x){return 20 * Math.log(x)/Math.LN10;},\n                       cnvFrom : function(x){return Math.pow(10, x / 20);}};\n    // The plain text ucum units file uses '2lg'\n    this.funcs['2lg'] = {cnvTo : function(x){return 2 * Math.log(x)/Math.LN10;},\n                           cnvFrom : function(x){return Math.pow(10, x / 2);}};\n    // The xml essence ucum file uses lgTimes2\n    this.funcs['lgtimes2'] = this.funcs['2lg'];\n\n    // ld - dual logarithm (base 2)\n    this.funcs['ld'] = {cnvTo : function(x){return Math.log(x)/Math.LN2;},\n                     cnvFrom : function(x){return Math.pow(2, x);}};\n\n    // tan - tangent\n    this.funcs['100tan'] = {cnvTo : function(x){return Math.tan(x) * 100;},\n                         cnvFrom : function(x){return Math.atan(x/100);}};\n    // the xml essence ucum file uses both 100tan and tanTimes100\n    this.funcs['tanTimes100'] = this.funcs['100tan'] ;\n\n    // sqrt - square root\n    this.funcs['sqrt'] = {cnvTo : function(x){return Math.sqrt(x);},\n                       cnvFrom : function(x){return x*x;}};\n\n    // inv - inverse\n    this.funcs['inv'] = {cnvTo : function(x){return 1.0 / x;},\n                      cnvFrom : function(x){return 1.0 / x;}};\n\n    // homeopathic potency functions\n    this.funcs['hpX'] = {cnvTo : function(x){return -(this.funcs['lg'](x));},\n                      cnvFrom : function(x){return Math.pow(10, -x);}};\n\n    this.funcs['hpC'] = {cnvTo : function(x){\n                              return -(this.func['ln'](x))/this.funcs['ln'](100);},\n                       cnvFrom : function(x){return Math.pow(100, -x);}};\n\n    this.funcs['hpM'] = {cnvTo : function(x){\n                              return -(this.funcs['ln'](x))/this.funcs['ln'](1000);},\n                      cnvFrom : function(x){return Math.pow(1000, -x);}};\n\n    this.funcs['hpQ'] = {cnvTo : function(x){\n                              return -(this.funcs['ln'](x))/this.funcs['ln'](50000);},\n                      cnvFrom : function(x){return Math.pow(50000, -x);}};\n\n\n    // Make this a singleton.  See UnitTables constructor for details.\n    let holdThis = UcumFunctions.prototype;\n    if (exports)\n      exports.UcumFunctions = UcumFunctions ;\n    UcumFunctions = function(){throw (new Error('UcumFunctions is a Singleton. ' +\n                           'Use UcumFunctions.getInstance() instead.'))};\n    UcumFunctions.prototype = holdThis;\n    let self = this ;\n    UcumFunctions.getInstance = function(){return self} ;\n\n  } // end of constructor\n\n\n  /**\n   * Returns the function with the name specified\n   *\n   * @param fname name of the function to be returned\n   * @return the function with the specified name\n   * @throws an error message if the function is not found\n   */\n  forName(fname) {\n    fname = fname.toLowerCase();\n    \n    let f = this.funcs[fname] ;\n    if (f === null)\n      throw(new Error(`Requested function ${fname} is not defined`));\n    return f;\n  }\n\n\n  /**\n   * Returns a flag indicating whether or not the function has been\n   * defined.\n   *\n   * @param fname name of the function in question\n   * @return true if it has been defined; false if not\n   */\n  isDefined(fname) {\n    fname = fname.toLowerCase();\n    return this.funcs[fname] !== null;\n  }\n\n} // end of UcumFunctions class\n\n\n/**\n *  This function exists ONLY until the original UcumFunctions constructor\n *  is called for the first time.  It's defined here in case getInstance\n *  is called before the constructor.   This calls the constructor.\n *\n *  The constructor redefines the getInstance function to return the\n *  singleton UcumFunctions object.  This is based on the UnitTables singleton\n *  implementation; see more detail in the UnitTables constructor description.\n *\n *  @return the singleton Functions object.\n */\nUcumFunctions.getInstance = function(){\n  return new UcumFunctions();\n}\nUcumFunctions.getInstance();"]}