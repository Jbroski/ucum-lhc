{"version":3,"sources":["../source/ucumJsonDefs.js"],"names":["Pfx","require","PfxT","Un","Utab","jsonDefs_","UcumJsonDefs","holdThis","prototype","Error","exports","self","getInstance","UnitTables","unitsCount","pTab","PrefixTables","prefixes","plen","length","p","newPref","Prefix","add","uTab","units","ulen","u","newUnit","Unit","addUnit"],"mappings":";;;;;;;;;;AAAA;;;;;;;;AAQA,IAAIA,MAAMC,QAAQ,aAAR,CAAV;AACA,IAAIC,OAAOD,QAAQ,mBAAR,CAAX;AACA,IAAIE,KAAKF,QAAQ,WAAR,CAAT;AACA,IAAIG,OAAOH,QAAQ,iBAAR,CAAX;;AAEA;AACA,IAAII,YAAYJ,QAAQ,uBAAR,CAAhB;;IAEaK,Y,WAAAA,Y;;AAEX;;;;;AAKA,0BAAc;AAAA;;AAEZ;;AAEA,QAAIC,WAAWD,aAAaE,SAA5B;AACAF,mBAAe,wBAAU;AAAC,YAAO,IAAIG,KAAJ,CAAU,kCACX,yCADC,CAAP;AACkD,KAD5E;AAEA,QAAIC,OAAJ,EACEA,QAAQJ,YAAR,GAAuBA,YAAvB;AACFA,iBAAaE,SAAb,GAAyBD,QAAzB;AACA,QAAII,OAAO,IAAX;AACAL,iBAAaM,WAAb,GAA2B,YAAU;AAAC,aAAOD,IAAP;AAAY,KAAlD;AAED,G,CAAC;;;AAGF;;;;;;;;;;mCAMe;;AAEb,UAAIP,KAAKS,UAAL,CAAgBD,WAAhB,GAA8BE,UAA9B,OAA+C,CAAnD,EAAsD;;AAEpD,YAAIC,OAAOb,KAAKc,YAAL,CAAkBJ,WAAlB,EAAX;AACA,YAAIK,WAAWZ,UAAU,UAAV,CAAf;AACA,YAAIa,OAAOD,SAASE,MAApB;;AAEA,aAAK,IAAIC,IAAI,CAAb,EAAgBA,IAAIF,IAApB,EAA0BE,GAA1B,EAA+B;AAC7B,cAAIC,UAAU,IAAIrB,IAAIsB,MAAR,CAAeL,SAASG,CAAT,CAAf,CAAd;AACAL,eAAKQ,GAAL,CAASF,OAAT;AACD;;AAED,YAAIG,OAAOpB,KAAKS,UAAL,CAAgBD,WAAhB,EAAX;AACA,YAAIa,QAAQpB,UAAU,OAAV,CAAZ;AACA,YAAIqB,OAAOD,MAAMN,MAAjB;;AAEA,aAAK,IAAIQ,IAAI,CAAb,EAAgBA,IAAID,IAApB,EAA0BC,GAA1B,EAA+B;AAC7B,cAAIC,UAAU,IAAIzB,GAAG0B,IAAP,CAAYJ,MAAME,CAAN,CAAZ,CAAd;AACAH,eAAKM,OAAL,CAAaF,OAAb;AACD;AACF,OArBY,CAqBX;AACH,K,CAAC;;;;;KAEF;;AAEF;;;;;;;;;;;;;AAWAtB,aAAaM,WAAb,GAA2B,YAAU;AACnC,SAAO,IAAIN,YAAJ,EAAP;AACD,CAFD","file":"ucumJsonDefs.js","sourcesContent":["/**\n * This class handles opening, reading and loading the JSON file of ucum\n * definitions (prefixes, base units, and unit atoms).\n *\n * @author Lee Mericle\n *\n */\n\nvar Pfx = require(\"./prefix.js\");\nvar PfxT = require(\"./prefixTables.js\");\nvar Un = require(\"./unit.js\");\nvar Utab = require('./unitTables.js');\n\n// requiring the file will take care of opening it for use\nvar jsonDefs_ = require('../data/ucumDefs.json');\n\nexport class UcumJsonDefs {\n\n  /**\n   * Constructor.  This reads the json file (essenceFile_) into the\n   * jsonDefs hash and makes this a singlton object.\n   *\n   */\n  constructor() {\n\n    // Make this a singleton.  See UnitTables constructor for details.\n\n    let holdThis = UcumJsonDefs.prototype;\n    UcumJsonDefs = function(){throw (new Error('UcumJsonDefs is a Singleton. ' +\n                                    'Use UcumJsonDefs.getInstance() instead.'))};\n    if (exports)\n      exports.UcumJsonDefs = UcumJsonDefs;\n    UcumJsonDefs.prototype = holdThis;\n    let self = this ;\n    UcumJsonDefs.getInstance = function(){return self} ;\n\n  } // end constructor\n\n\n  /**\n   * This method loads the JSON prefix and unit objects into the prefix and\n   * unit tables.\n   *\n   * @returns nothing\n   */\n  loadJsonDefs() {\n\n    if (Utab.UnitTables.getInstance().unitsCount() === 0) {\n\n      let pTab = PfxT.PrefixTables.getInstance();\n      let prefixes = jsonDefs_[\"prefixes\"];\n      let plen = prefixes.length;\n\n      for (let p = 0; p < plen; p++) {\n        let newPref = new Pfx.Prefix(prefixes[p]);\n        pTab.add(newPref);\n      }\n\n      let uTab = Utab.UnitTables.getInstance();\n      let units = jsonDefs_[\"units\"];\n      let ulen = units.length;\n\n      for (let u = 0; u < ulen; u++) {\n        let newUnit = new Un.Unit(units[u]);\n        uTab.addUnit(newUnit);\n      }\n    } // end if the data has not already been loaded\n  } // end loadJsonDefs\n\n} // end UcumJsonDefs class\n\n/**\n *  This function exists ONLY until the original UcumJsonDefs constructor\n *  is called for the first time.  It's defined here in case getInstance\n *  is called before the constructor.   This calls the constructor.\n *\n *  The constructor redefines the getInstance function to return the\n *  singleton UcumJsonDefs object.  This is based on the UnitTables singleton\n *  implementation; see more detail in the UnitTables constructor description.\n *\n *  @return the singleton UcumJsonDefs object.\n */\nUcumJsonDefs.getInstance = function(){\n  return new UcumJsonDefs();\n}\n\n"]}